# Labb1-Nasir Alizade
-----------------------------------------------------------------------------------------------------------------------------------------
expr   ::= <Subexpression> ('+' <Subexpression>)*
Subexpression  ::= Element (operation Element)*
element   ::= component | exact_op
exact_op ::= component '{' DIGIT '}'
component ::= '(' expr ')' | ANY_CHAR | char | ...
Operation  ::= <Subexpression>* | <Subexpression> \I |<Subexpression> \O{number}
char ::= all characters except special symbols (., +, *, (), {}, \I, \O)
DIGIT   ::= [0-9]

-----------------------------------------------------------------------------------------------------------------------------------------
+ eller, passar ett av tv책 alternativ. Syntax: OP1+OP2
* flera, passar ett eller flera upprepningar av en operand. Syntax: OP*
() inf책ngningsgrupp, deluttryck. Uttrycket parsas separat. Syntax: (EXPR)
. tecken. matchar varlfritt tecken. Syntax: .
{} r채knare. matchar precis N stycken operander. Syntax: OP{3}
\I ignorera versalisering. Syntax EXPR\I
\O{} vilken inf책ngningsgrupp som ska ges som output. Syntax: EXPR\O{2}. Default \O{0} hela matchningen.